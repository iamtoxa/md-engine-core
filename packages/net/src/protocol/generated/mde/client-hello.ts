// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class ClientHello {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ClientHello {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsClientHello(bb:flatbuffers.ByteBuffer, obj?:ClientHello):ClientHello {
  return (obj || new ClientHello()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsClientHello(bb:flatbuffers.ByteBuffer, obj?:ClientHello):ClientHello {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ClientHello()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

clientVersion():string|null
clientVersion(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
clientVersion(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

protocolMajor():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

protocolMinor():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

capabilities():number {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;
}

static startClientHello(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addClientVersion(builder:flatbuffers.Builder, clientVersionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, clientVersionOffset, 0);
}

static addProtocolMajor(builder:flatbuffers.Builder, protocolMajor:number) {
  builder.addFieldInt16(1, protocolMajor, 0);
}

static addProtocolMinor(builder:flatbuffers.Builder, protocolMinor:number) {
  builder.addFieldInt16(2, protocolMinor, 0);
}

static addCapabilities(builder:flatbuffers.Builder, capabilities:number) {
  builder.addFieldInt32(3, capabilities, 0);
}

static endClientHello(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createClientHello(builder:flatbuffers.Builder, clientVersionOffset:flatbuffers.Offset, protocolMajor:number, protocolMinor:number, capabilities:number):flatbuffers.Offset {
  ClientHello.startClientHello(builder);
  ClientHello.addClientVersion(builder, clientVersionOffset);
  ClientHello.addProtocolMajor(builder, protocolMajor);
  ClientHello.addProtocolMinor(builder, protocolMinor);
  ClientHello.addCapabilities(builder, capabilities);
  return ClientHello.endClientHello(builder);
}
}
