// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class Pong {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Pong {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsPong(bb:flatbuffers.ByteBuffer, obj?:Pong):Pong {
  return (obj || new Pong()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsPong(bb:flatbuffers.ByteBuffer, obj?:Pong):Pong {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Pong()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

serverTimeMs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

echoClientTimeMs():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

static startPong(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addServerTimeMs(builder:flatbuffers.Builder, serverTimeMs:bigint) {
  builder.addFieldInt64(0, serverTimeMs, BigInt('0'));
}

static addEchoClientTimeMs(builder:flatbuffers.Builder, echoClientTimeMs:bigint) {
  builder.addFieldInt64(1, echoClientTimeMs, BigInt('0'));
}

static endPong(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createPong(builder:flatbuffers.Builder, serverTimeMs:bigint, echoClientTimeMs:bigint):flatbuffers.Offset {
  Pong.startPong(builder);
  Pong.addServerTimeMs(builder, serverTimeMs);
  Pong.addEchoClientTimeMs(builder, echoClientTimeMs);
  return Pong.endPong(builder);
}
}
